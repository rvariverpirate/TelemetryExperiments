Archive member included to satisfy reference by file (symbol)

/usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_exit.o)
                              /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/../../../../avr/lib/avr5/crtm328p.o (exit)
/usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_copy_data.o)
                              spi_rf_send.o (__do_copy_data)

Discarded input sections

 .data          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/../../../../avr/lib/avr5/crtm328p.o
 .bss           0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/../../../../avr/lib/avr5/crtm328p.o
 .text          0x0000000000000000        0x0 SimpleUART.o
 .data          0x0000000000000000        0x0 SimpleUART.o
 .bss           0x0000000000000000        0x0 SimpleUART.o
 .text.usart_putchar_printf
                0x0000000000000000       0x1c SimpleUART.o
 .text          0x0000000000000000        0x0 nrf24l01.o
 .data          0x0000000000000000        0x0 nrf24l01.o
 .bss           0x0000000000000000        0x0 nrf24l01.o
 .text.nrf24l01_rx_active_to_standby
                0x0000000000000000        0x4 nrf24l01.o
 .text.nrf24l01_rx_standby_to_active
                0x0000000000000000        0x4 nrf24l01.o
 .text.nrf24l01_ce_pin_active
                0x0000000000000000        0x6 nrf24l01.o
 .text.nrf24l01_csn_pin_active
                0x0000000000000000        0xa nrf24l01.o
 .text.nrf24l01_get_rx_pipe_from_status
                0x0000000000000000        0x6 nrf24l01.o
 .text.nrf24l01_initialize_debug_lite
                0x0000000000000000       0x3a nrf24l01.o
 .text.nrf24l01_set_as_rx_param
                0x0000000000000000       0x14 nrf24l01.o
 .text.nrf24l01_set_as_tx_param
                0x0000000000000000       0x14 nrf24l01.o
 .text.nrf24l01_set_rx_addr
                0x0000000000000000       0x14 nrf24l01.o
 .text.nrf24l01_set_rx_pw
                0x0000000000000000       0x2e nrf24l01.o
 .text.nrf24l01_set_config
                0x0000000000000000       0x24 nrf24l01.o
 .text.nrf24l01_set_rf_ch
                0x0000000000000000       0x26 nrf24l01.o
 .text.nrf24l01_clear_plos_cnt_param
                0x0000000000000000       0x24 nrf24l01.o
 .text.nrf24l01_irq_clear_rx_dr
                0x0000000000000000       0x26 nrf24l01.o
 .text.nrf24l01_irq_clear_tx_ds
                0x0000000000000000       0x26 nrf24l01.o
 .text.nrf24l01_irq_clear_max_rt
                0x0000000000000000       0x26 nrf24l01.o
 .text.nrf24l01_power_up
                0x0000000000000000       0x62 nrf24l01.o
 .text.nrf24l01_power_down
                0x0000000000000000       0x40 nrf24l01.o
 .text.nrf24l01_get_rx_pw
                0x0000000000000000       0x2c nrf24l01.o
 .text.nrf24l01_get_config
                0x0000000000000000       0x24 nrf24l01.o
 .text.nrf24l01_get_rf_ch
                0x0000000000000000       0x24 nrf24l01.o
 .text.nrf24l01_get_observe_tx
                0x0000000000000000       0x24 nrf24l01.o
 .text.nrf24l01_get_plos_cnt
                0x0000000000000000       0x28 nrf24l01.o
 .text.nrf24l01_clear_plos_cnt
                0x0000000000000000       0x32 nrf24l01.o
 .text.nrf24l01_get_arc_cnt
                0x0000000000000000       0x26 nrf24l01.o
 .text.nrf24l01_aa_enabled
                0x0000000000000000       0x40 nrf24l01.o
 .text.nrf24l01_aa_enable
                0x0000000000000000       0x62 nrf24l01.o
 .text.nrf24l01_aa_disable
                0x0000000000000000       0x64 nrf24l01.o
 .text.nrf24l01_rx_pipe_enabled
                0x0000000000000000       0x40 nrf24l01.o
 .text.nrf24l01_rx_pipe_enable
                0x0000000000000000       0x62 nrf24l01.o
 .text.nrf24l01_rx_pipe_disable
                0x0000000000000000       0x64 nrf24l01.o
 .text.nrf24l01_cd_active
                0x0000000000000000       0x24 nrf24l01.o
 .text.nrf24l01_get_fifo_status
                0x0000000000000000       0x24 nrf24l01.o
 .text.nrf24l01_fifo_tx_reuse
                0x0000000000000000       0x26 nrf24l01.o
 .text.nrf24l01_fifo_tx_full
                0x0000000000000000       0x26 nrf24l01.o
 .text.nrf24l01_fifo_tx_empty
                0x0000000000000000       0x26 nrf24l01.o
 .text.nrf24l01_fifo_rx_full
                0x0000000000000000       0x26 nrf24l01.o
 .text.nrf24l01_fifo_rx_empty
                0x0000000000000000       0x26 nrf24l01.o
 .text.nrf24l01_get_all_registers
                0x0000000000000000       0xa2 nrf24l01.o
 .text.nrf24l01_flush_tx
                0x0000000000000000       0x10 nrf24l01.o
 .text.nrf24l01_flush_rx
                0x0000000000000000       0x10 nrf24l01.o
 .text.nrf24l01_clear_flush
                0x0000000000000000        0xc nrf24l01.o
 .text.nrf24l01_reuse_tx_pl
                0x0000000000000000       0x10 nrf24l01.o
 .text.nrf24l01_get_status
                0x0000000000000000        0x4 nrf24l01.o
 .text.nrf24l01_irq_max_rt_active
                0x0000000000000000        0x8 nrf24l01.o
 .text.nrf24l01_get_rx_pipe
                0x0000000000000000        0xa nrf24l01.o
 .text          0x0000000000000000        0x0 spi.o
 .data          0x0000000000000000        0x0 spi.o
 .bss           0x0000000000000000        0x0 spi.o
 .text.SPI_MasterTransmit
                0x0000000000000000        0xa spi.o
 .text.SPI_SlaveReceive
                0x0000000000000000        0xa spi.o
 .text          0x0000000000000000        0x0 spi_rf_send.o
 .data          0x0000000000000000        0x0 spi_rf_send.o
 .bss           0x0000000000000000        0x0 spi_rf_send.o
 .text          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_exit.o)
 .data          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_copy_data.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/../../../../avr/lib/avr5/crtm328p.o
LOAD SimpleUART.o
LOAD nrf24l01.o
LOAD spi.o
LOAD spi_rf_send.o
START GROUP
LOAD /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a
LOAD /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/../../../../avr/lib/avr5/libm.a
LOAD /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/../../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x74a
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/../../../../avr/lib/avr5/crtm328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/../../../../avr/lib/avr5/crtm328p.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/../../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000008a        0x8 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/../../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x0000000000000092        0x4 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/../../../../avr/lib/avr5/crtm328p.o
                0x0000000000000092                __vector_20
                0x0000000000000092                __vector_1
                0x0000000000000092                __vector_24
                0x0000000000000092                __vector_12
                0x0000000000000092                __bad_interrupt
                0x0000000000000092                __vector_6
                0x0000000000000092                __vector_3
                0x0000000000000092                __vector_23
                0x0000000000000092                __vector_25
                0x0000000000000092                __vector_11
                0x0000000000000092                __vector_13
                0x0000000000000092                __vector_17
                0x0000000000000092                __vector_19
                0x0000000000000092                __vector_7
                0x0000000000000092                __vector_5
                0x0000000000000092                __vector_4
                0x0000000000000092                __vector_9
                0x0000000000000092                __vector_2
                0x0000000000000092                __vector_21
                0x0000000000000092                __vector_15
                0x0000000000000092                __vector_8
                0x0000000000000092                __vector_14
                0x0000000000000092                __vector_10
                0x0000000000000092                __vector_16
                0x0000000000000092                __vector_18
                0x0000000000000092                __vector_22
                0x0000000000000096                . = ALIGN (0x2)
 *(.text.*)
 .text.USART_Init
                0x0000000000000096       0x16 SimpleUART.o
                0x0000000000000096                USART_Init
 .text.USART_Transmit
                0x00000000000000ac        0xe SimpleUART.o
                0x00000000000000ac                USART_Transmit
 .text.USART_Receive
                0x00000000000000ba        0xe SimpleUART.o
                0x00000000000000ba                USART_Receive
 .text.USART_println
                0x00000000000000c8       0x24 SimpleUART.o
                0x00000000000000c8                USART_println
 .text.nrf24l01_clear_ce
                0x00000000000000ec        0x4 nrf24l01.o
                0x00000000000000ec                nrf24l01_clear_ce
 .text.nrf24l01_set_ce
                0x00000000000000f0        0x4 nrf24l01.o
                0x00000000000000f0                nrf24l01_set_ce
 .text.nrf24l01_transmit
                0x00000000000000f4       0x10 nrf24l01.o
                0x00000000000000f4                nrf24l01_transmit
 .text.nrf24l01_clear_csn
                0x0000000000000104        0x4 nrf24l01.o
                0x0000000000000104                nrf24l01_clear_csn
 .text.nrf24l01_set_csn
                0x0000000000000108        0x4 nrf24l01.o
                0x0000000000000108                nrf24l01_set_csn
 .text.nrf24l01_irq_pin_active
                0x000000000000010c        0xe nrf24l01.o
                0x000000000000010c                nrf24l01_irq_pin_active
 .text.nrf24l01_spi_send_read
                0x000000000000011a       0x3c nrf24l01.o
                0x000000000000011a                nrf24l01_spi_send_read
 .text.nrf24l01_execute_command
                0x0000000000000156       0x58 nrf24l01.o
                0x0000000000000156                nrf24l01_execute_command
 .text.nrf24l01_write_register
                0x00000000000001ae        0xa nrf24l01.o
                0x00000000000001ae                nrf24l01_write_register
 .text.nrf24l01_power_up_param
                0x00000000000001b8       0x4c nrf24l01.o
                0x00000000000001b8                nrf24l01_power_up_param
 .text.nrf24l01_power_down_param
                0x0000000000000204       0x2a nrf24l01.o
                0x0000000000000204                nrf24l01_power_down_param
 .text.nrf24l01_set_tx_addr
                0x000000000000022e        0xa nrf24l01.o
                0x000000000000022e                nrf24l01_set_tx_addr
 .text.nrf24l01_irq_clear_all
                0x0000000000000238       0x26 nrf24l01.o
                0x0000000000000238                nrf24l01_irq_clear_all
 .text.nrf24l01_initialize
                0x000000000000025e      0x222 nrf24l01.o
                0x000000000000025e                nrf24l01_initialize
 .text.nrf24l01_initialize_debug
                0x0000000000000480       0x7c nrf24l01.o
                0x0000000000000480                nrf24l01_initialize_debug
 .text.nrf24l01_read_register
                0x00000000000004fc        0x8 nrf24l01.o
                0x00000000000004fc                nrf24l01_read_register
 .text.nrf24l01_set_as_rx
                0x0000000000000504       0x50 nrf24l01.o
                0x0000000000000504                nrf24l01_set_as_rx
 .text.nrf24l01_set_as_tx
                0x0000000000000554       0x40 nrf24l01.o
                0x0000000000000554                nrf24l01_set_as_tx
 .text.nrf24l01_write_tx_payload
                0x0000000000000594       0x30 nrf24l01.o
                0x0000000000000594                nrf24l01_write_tx_payload
 .text.nrf24l01_read_rx_payload
                0x00000000000005c4       0x3e nrf24l01.o
                0x00000000000005c4                nrf24l01_read_rx_payload
 .text.nrf24l01_nop
                0x0000000000000602       0x10 nrf24l01.o
                0x0000000000000602                nrf24l01_nop
 .text.nrf24l01_irq_rx_dr_active
                0x0000000000000612        0x8 nrf24l01.o
                0x0000000000000612                nrf24l01_irq_rx_dr_active
 .text.nrf24l01_irq_tx_ds_active
                0x000000000000061a        0x8 nrf24l01.o
                0x000000000000061a                nrf24l01_irq_tx_ds_active
 .text.SPI_Master_Init
                0x0000000000000622        0xa spi.o
                0x0000000000000622                SPI_Master_Init
 .text.spi_send_read_byte
                0x000000000000062c        0xe spi.o
                0x000000000000062c                spi_send_read_byte
 .text.InitializeIO
                0x000000000000063a        0xa spi_rf_send.o
                0x000000000000063a                InitializeIO
 .text.ToggleLED
                0x0000000000000644        0xa spi_rf_send.o
                0x0000000000000644                ToggleLED
 .text.startup.main
                0x000000000000064e       0xf8 spi_rf_send.o
                0x000000000000064e                main
                0x0000000000000746                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000746        0x0 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_exit.o)
                0x0000000000000746                exit
                0x0000000000000746                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000746        0x4 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000074a                _etext = .

.data           0x0000000000800100       0x2c load address 0x000000000000074a
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800100       0x2c spi_rf_send.o
                                         0x2d (size before relaxing)
 *(.gnu.linkonce.d*)
                0x000000000080012c                . = ALIGN (0x2)
                0x000000000080012c                _edata = .
                0x000000000080012c                PROVIDE (__data_end, .)

.bss            0x000000000080012c        0x0
                0x000000000080012c                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 *(COMMON)
                0x000000000080012c                PROVIDE (__bss_end, .)
                0x000000000000074a                __data_load_start = LOADADDR (.data)
                0x0000000000000776                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080012c        0x0
                0x000000000080012c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080012c                PROVIDE (__noinit_end, .)
                0x000000000080012c                _end = .
                0x000000000080012c                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x2664
 *(.stab)
 .stab          0x0000000000000000      0x6e4 SimpleUART.o
                                        0x75c (size before relaxing)
 .stab          0x00000000000006e4     0x14f4 nrf24l01.o
                                       0x2be0 (size before relaxing)
 .stab          0x0000000000001bd8      0x390 spi.o
                                        0x60c (size before relaxing)
 .stab          0x0000000000001f68      0x5b8 spi_rf_send.o
                                        0x81c (size before relaxing)
 .stab          0x0000000000002520       0x6c /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_exit.o)
                                         0x78 (size before relaxing)
 .stab          0x000000000000258c       0xd8 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/avr5/libgcc.a(_copy_data.o)
                                         0xe4 (size before relaxing)

.stabstr        0x0000000000000000     0x1d80
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1d80 SimpleUART.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 SimpleUART.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 nrf24l01.o
 .comment       0x0000000000000011       0x12 spi.o
 .comment       0x0000000000000011       0x12 spi_rf_send.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x34
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x34 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/../../../../avr/lib/avr5/crtm328p.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x5f4
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x5f4 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/../../../../avr/lib/avr5/crtm328p.o

.debug_abbrev   0x0000000000000000      0x5a2
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x5a2 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/../../../../avr/lib/avr5/crtm328p.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/../../../../avr/lib/avr5/crtm328p.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x208
 *(.debug_str)
 .debug_str     0x0000000000000000      0x208 /usr/local/Cellar/avr-gcc49/4.9.3/lib/gcc/avr/4.9.3/../../../../avr/lib/avr5/crtm328p.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(spi_rf_send.elf elf32-avr)
LOAD linker stubs
